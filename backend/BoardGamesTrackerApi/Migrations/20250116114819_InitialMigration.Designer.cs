// <auto-generated />
using System;
using BoardGamesTracker;
using BoardGamesTrackerApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardGamesTracker.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250116114819_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoardGamesTracker.Models.BoardGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AveragePlayingTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("Difficulty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxNumberOfPlayers")
                        .HasColumnType("int");

                    b.Property<int>("MinNumberOfPlayers")
                        .HasColumnType("int");

                    b.Property<int>("MinimumAge")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BoardGames");
                });

            modelBuilder.Entity("BoardGamesTracker.Models.BoardGameCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardGameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BoardGameId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BoardGameCategories");
                });

            modelBuilder.Entity("BoardGamesTracker.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BoardGamesTracker.Models.BoardGameCategory", b =>
                {
                    b.HasOne("BoardGamesTracker.Models.BoardGame", "BoardGame")
                        .WithMany("BoardGameCategories")
                        .HasForeignKey("BoardGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoardGamesTracker.Models.Category", "Category")
                        .WithMany("BoardGameCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoardGame");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BoardGamesTracker.Models.BoardGame", b =>
                {
                    b.Navigation("BoardGameCategories");
                });

            modelBuilder.Entity("BoardGamesTracker.Models.Category", b =>
                {
                    b.Navigation("BoardGameCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
